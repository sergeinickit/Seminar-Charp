
// Задание 1.Напишите программу, которая будет принимать на вход число и 
// возвращать сумму его цифр.

// Указание
// Использовать рекурсию

// Пример:
// 123 => 6
// 63 => 9

// Console.WriteLine("Введите число:");                 // Получили число от пользователя и
// int num = Convert.ToInt32(Console.ReadLine());       // Сохраняем                       // 234         

// int GetSumNumbers(int newNumber)    //234
// {
//     if (newNumber == 0)
//     {
//         return 0;
//     }
//     return newNumber % 10 + GetSumNumbers(newNumber / 10);   // Если не поставить /10 будет бесконечная рекурсия, а так у сохраненного числа откидываем посленюю цифру
//        // 4+(3+(2+(0)))                                                        // последнюю цифру сохранили и откинули
// }

// Console.WriteLine(GetSumNumbers(num));              // Вызываем функцию и тутже передаем
// Сначало проверка(if) пропускается и выдается при делении на 10 последняя цифра(4), затем рекурсия - выдается число 23, сравнивается с "0" (23 > 0) и выдает
// после делния на 10 - (3), и т.д.(снова рекурсия) пока не дойдем до условия остановки (==0). Посленяя цифра при делении на 10 дает остаток, но так как int - то
// остаток откидываеся - берется целое и (2 / 10 = 0.2) => 0

// При использовании цикла внутри функции для выхода используем "break". "return" более универсален. Рекурсия действует быстрея циклаю !!!



// Задание 2. Задайте значение N. Напишите программу, которая выведет 
// все натуральные числа в промежутке от 1 до N.

// Указание
// Использовать рекурсию. Не использовать цикл

// Пример:  N=5 => 1 2 3 4 5

// int num = new Random().Next(1, 10);
// Console.WriteLine(num);

// int firstNum = 1;                    // Создаем переменную, чтобы не указывать конкректные(магические) числа. Так правильно!!!

// void PrintNumbers(int startNum, int endNum)
// {
//     Console.WriteLine(startNum);

//     if (startNum >= endNum)
//     {
//         return;
//     }
//     PrintNumbers(startNum + 1, endNum);     // Чтобы не было бесконечной рекурсии, надо чтобы переменная "startNum" увеличивалась,
//                                             // Для этого пишем здесь "startNum +1"
// }
// PrintNumbers(firstNum, num);



// Задание 3.Считать строку с консоли, содержащую латинские буквы. 
// Вывести на экран согласные буквы этой строки.
// Указание
// Использовать рекурсию. Не использовать цикл.

// Пример:   “hello” => h l l
//           “World” => W r l d
//           “Hello world!” => H l l w r l d

// string str ="R4u9gyr";

// PrintConsonants(str);

// void PrintConsonants(string s)    // Со строчкой работаем как с массивом
// {
//     if(s.Length ==0)
//     {
//         return;
//     }
//     string vowels = "aeiuyo";    // Создаем строчку с всеми гласными для сравнения при проверке со всеми символами( во втором if)

//     if(char.IsLetter(s[0]) && !vowels.Contains(char.ToLower(s[0])))         // Встроенная функция(IsLetter), которая проверяет: являетсяли символ - буквой
// // Первая проверка s[0] - является сивол буквой? Далее для проверки делаем все наши буквы маленькими(нижний регистр) с помощью (char.ToLower(s[0])) и 
// // дальше проверяем: есть ли наша буква среди гласных (!vowels.Contains)?  Если нет то выводим символ.      "!" это "НЕ"
//     {
//         Console.WriteLine(s[0]);
//     } 
//     PrintConsonants(s.Substring(1));       // (1) вместо (0), потому что в Substring отсчет начинается с "1", так что это тот же символ
// }